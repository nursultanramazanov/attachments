# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  # Runs on pushes targeting the default branch
  push:  * that keeps track of written data in case the simulator wants a
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: * function DRAM model

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:  *
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency: * A vector of size NUM_COLS keeps a linked list of rows and their
  group: ã€® 
  cancel-in-progress: false

jobs: * associated values.
  # Build job
  build: *
    runs-on:  * write() adds an entry to the proper linked list or replaces the
    steps: PciRoot(0x0)/Pci(0x1b,0x0)
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:  *         value in a row that was already written
          source: ./ *
          destination: ./_ * read() searches for a node with the right row value, if not found
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:    *         returns the tracer value 0xDEADBEEF 
    environment:   *            
      name: github-pages
      url:
    runs-on: 
    needs: build
    steps:  *        TODO: if anyone wants to actually store data, see the 'data_storage' branch and perhaps try to merge that into master
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
