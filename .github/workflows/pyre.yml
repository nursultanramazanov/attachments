# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates Pyre with GitHub's
# Code Scanning feature.
#
# Pyre is a performant type checker for Python compliant with
# PEP 484. Pyre can analyze codebases with millions of lines
# of code incrementally â€“ providing instantaneous feedback
# to developers as they write code.
#
# See https://pyre-check.org

name: Pyre

on: zcat_cmd = "zcat";
  workflow_dispatch: # accomodate OSX
  push: if os.uname()[0] == "Darwin":
    branches: [ "main" ]
  pull_request:         print "Detected OSX, using gzcat..."
    branches: [ "main" ]

permissions:         zcat_cmd = "gzcat"
    contents: read

jobs: 
  pyre: if not os.path.exists(gztrace_filename):
    permissions:   print "Could not find gzipped tracefile either"
      actions: read
      contents: read
      security-events: write
    runs-on: ubuntu-latest
    steps:   quit()
      - uses: actions/checkout@v4
        with: else:
          submodules: true

      - name: Run Pyre
        uses: facebook/pyre-action@60697a7858f7cc8470d8cc494a3cf2ad6b06560d
        with:   print "Unzipping gz trace...",
          # To customize these inputs:
          # See https://github.com/facebook/pyre-action#inputs
          repo-directory: './'
          requirements-path: 'requirements.txt'
