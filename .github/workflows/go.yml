# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on: /* global chrome */
import React, {Component} from 'react'
import Settings from './settings'
  push: const settingsKeys = ['redirecting', 'host', 'port', 'apiPort', 'apiInterval']
    branches: [ "main" ]
  pull_request: export default class Menu extends Component {
  state = {};
    branches: [ "main" ]

jobs:  constructor (props) {
    super(props)

  build:    this.handleSubmit = this.handleSubmit.bind(this)
    runs-on: ubuntu-latest
    steps:    chrome.storage.sync.get(settingsKeys, (settings) => {
      console.log('got settings', settings)
      this.setState(settings)
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:  handleSubmit (values) {
    chrome.storage.sync.set(values, () => {
      console.log('saved settings', values)
      window.close()
    })
        go-version: '1.20'

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...
