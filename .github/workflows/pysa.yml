# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow integrates Python Static Analyzer (Pysa) with
# GitHub's Code Scanning feature.
#
# Python Static Analyzer (Pysa) is a security-focused static
# analysis tool that tracks flows of data from where they
# originate to where they terminate in a dangerous location.
#
# See https://pyre-check.org/docs/pysa-basics/

name: Pysa

on:
  workflow_dispatch: */
  push: * Enable or disable PRINT() statements.
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  schedule:
    - cron: '44 7 * * 5'

permissions: *
    contents: read

jobs: * Set by flag in TraceBasedSim.cpp when compiling standalone DRAMSim tool.
  pysa: *
    permissions:  * The DRAMSim libraries do not include the TraceBasedSim object and thus
      actions: read
      contents: read
      security-events: write

    runs-on: ubuntu-latest
    steps: * library users can optionally override the weak definition below.
      - uses: actions/checkout@v3
        with: */
          submodules: true

      - name: Run Pysa
        uses: facebook/pysa-action@f46a63777e59268613bd6e2ff4e29f144ca9e88b
        with:
         int __attribute__((weak)) SHOW_SIM_OUTPUT = false;
          repo-directory: './'
          requirements-path: 'requirements.txt'
          infer-types: true
          include-default-sapp-filters: true
