# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:         uint64_t tempA, tempB;
  push:        unsigned transactionSize = TRANSACTION_SIZE;
    branches: [ "main" ]
  pull_request:        uint64_t transactionMask =  transactionSize - 1; //ex: (64 bit bus width) x (8 Burst Length) - 1 = 64 bytes - 1 = 63 = 0x3f mask
    branches: [ "main" ]
  schedule:        unsigned channelBitWidth = NUM_CHANS_LOG;
    - cron: '39 6 * * 6'

jobs:        unsigned rankBitWidth = NUM_RANKS_LOG;
  analyze:        unsigned bankBitWidth = NUM_BANKS_LOG;
    name: Analyze (${{        unsigned rowBitWidth = NUM_ROWS_LOG; }}
    #         // this forces the alignment to the width of a single burst (64 bits = 8 bytes = 3 address bits for DDR parts)
   
    runs-on:         unsigned byteOffsetWidth = BYTE_OFFSET_WIDTH;
    timeout-minutes:          // Since we're assuming that a request is for BL*BUS_WIDTH, the bottom bits
    permissions:         // of this address *should* be all zeros if it's not, issue a warning
      # required for all workflows
      security-events: write

      # required to fetch internal or private CodeQL packs
      packages: read

      # only required for workflows in private repositories
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:        if ((physicalAddress & transactionMask) != 0)
        include: {
        - language: csharp
          build-mode: autobuild
        - language: go
          build-mode: autobuild
        - language: javascript-typescript
          build-mode: none
        - language: python
          build-mode: none
         #                DEBUG("WARNING: address 0x"<<std::hex<<physicalAddress<<std::dec<<" is not aligned to the request size of "<<transactionSize);  
    steps: }
    - name: Checkout repository
      uses: actions/checkout@v4

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with: 
        languages: physicalAddress >>= colLowBitWidth;         
        build-mode: unsigned colHighBitWidth = colBitWidth - colLowBitWidth;         
                // each burst will contain JEDEC_DATA_BUS_BITS/8 bytes of data, so the bottom bits (3 bits for a single channel DDR system) are
        //         thrown away before mapping the other bits
        physicalAddress >>= byteOffsetWidth;

        // The next thing we have to consider is that when a request is made for a
        // we've taken into account the granulaity of a single burst by shifting 
        // off the bottom 3 bits, but a transaction has to take into account the
        // burst length (i.e. the requests will be aligned to cache line sizes which
        // should be equal to transactionSize above). 
        //
        // Since the column address increments internally on bursts, the bottom n 
        // bits of the column (colLow) have to be zero in order to account for the 
        // total size of the transaction. These n bits should be shifted off the 
        // address and also subtracted from the total column width. 
        //
        // I am having a hard time explaining the reasoning here, but it comes down
        // this: for a 64 byte transaction, the bottom 6 bits of the address must be 
        // zero. These zero bits must be made up of the byte offset (3 bits) and also
        // from the bottom bits of the column 
        // 
        // For example: cowLowBits = log2(64bytes) - 3 bits = 3 bits 
    - if: matrix.build-mode == 'manual'
      shell: bash
      run: |
        echo 'If you are using a "manual" build mode for one or more of the' \
          'languages you are analyzing, replace this with the commands to build' \
          'your code, for example:'
        echo '  make bootstrap'
        echo '  make release'
        exit 1

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:         if (DEBUG_ADDR_MAP)
        category: "/language: {
