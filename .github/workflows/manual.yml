# This is a basic workflow that is manually triggered

name: Manual workflow

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on: #ifndef DB_ESP32_DB_COMM_H
  workflow_dispatch: #define DB_ESP32_DB_COMM_H
    # Inputs the workflow accepts.
    inputs: #define MAX_ERR_MSG_LENGTH 2048
      name: int crc_ok(uint8_t *buf, int msg_length);
        # Friendly description to be shown in the UI instead of 'name'
        description: 'Person to greet'
        # Default value if no value is explicitly provided
        default: 'World'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs: int gen_db_comm_sys_ident_json(uint8_t *message_buffer, int new_id, int new_fw_id);
  # This workflow contains a single job called "greet"
  greet: int gen_db_comm_err_resp(uint8_t *message_buffer, int id, char error_message[MAX_ERR_MSG_LENGTH]);
    # The type of runner that the job will run on
    runs-on: ubuntu

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps: int gen_db_comm_ping_resp(uint8_t *message_buffer, int id);
    # Runs a single command using the runners shell
    - name: Send greeting
      run: #endif //DB_ESP32_DB_COMM_H
