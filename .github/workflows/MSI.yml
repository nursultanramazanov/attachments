# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno

name: Deno

on: [env]
__TAURI_WORKSPACE__ = "true"
  push: {
  "gitSiteUrl": "https://www.github.com/tauri-apps/tauri/",
  "changeTags": {
    "feat": "New Features",
    "enhance": "Enhancements",
    "bug": "Bug Fixes",
    "pref": "Performance Improvements",
    "changes": "What's Changed",
    "sec": "Security fixes",
    "deps": "Dependencies",
    "breaking": "Breaking Changes"
  },
  "defaultChangeTag": "changes",
  "pkgManagers": {
    "rust": {
      "version": true,
      "getPublishedVersion": "node ../../.scripts/covector/package-latest-version.js cargo ${ pkgFile.pkg.package.name } ${ pkgFile.pkg.package.version }",
      "prepublish": [
        "sudo apt-get update",
        "sudo apt-get install -y webkit2gtk-4.1 libayatana-appindicator3-dev",
        "cargo install cargo-audit --features=fix",
        {
          "command": "cargo generate-lockfile",
          "dryRunCommand": true,
          "runFromRoot": true,
          "pipe": true
        },
        {
          "command": "echo '<details>\n<summary><em><h4>Cargo Audit</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "cargo audit ${ process.env.CARGO_AUDIT_OPTIONS || '' }",
          "dryRunCommand": true,
          "runFromRoot": true,
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        }
      ],
      "publish": [
        "sleep 15s",
        {
          "command": "cargo package --no-verify",
          "dryRunCommand": true
        },
        {
          "command": "echo '<details>\n<summary><em><h4>Cargo Publish</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "cargo publish",
          "dryRunCommand": "cargo publish --dry-run",
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        }
      ],
      "postpublish": [
        "git tag ${ pkg.pkg }-v${ pkgFile.versionMajor } -f",
        "git tag ${ pkg.pkg }-v${ pkgFile.versionMajor }.${ pkgFile.versionMinor } -f",
        "git push --tags -f"
      ],
      "assets": [
        {
          "path": "./target/package/${ pkg.pkg }-${ pkgFile.version }.crate",
          "name": "${ pkg.pkg }-${ pkgFile.version }.crate"
        }
      ]
    },
    "javascript": {
      "version": true,
      "getPublishedVersion": "node ../../.scripts/covector/package-latest-version.js npm ${ pkgFile.pkg.name } ${ pkgFile.pkg.version }",
      "prepublish": [
        {
          "command": "yarn",
          "dryRunCommand": true
        },
        {
          "command": "echo '<details>\n<summary><em><h4>Yarn Audit</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "yarn audit",
          "dryRunCommand": true,
          "runFromRoot": true,
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "npm pack",
          "dryRunCommand": true
        }
      ],
      "publish": [
        "sleep 15s",
        {
          "command": "echo '<details>\n<summary><em><h4>Yarn Publish</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "yarn publish --access public --loglevel silly --tag next",
          "dryRunCommand": "npm publish --dry-run --access public",
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        }
      ],
      "postpublish": [
        "git tag ${ pkg.pkg }-v${ pkgFile.versionMajor } -f",
        "git tag ${ pkg.pkg }-v${ pkgFile.versionMajor }.${ pkgFile.versionMinor } -f",
        "git push --tags -f"
      ]
    }
  },
  "packages": {
    "@tauri-apps/api": {
      "path": "./tooling/api",
      "manager": "javascript",
      "assets": [
        {
          "path": "./tooling/api/dist/tauri-apps-api-${ pkgFile.version }.tgz",
          "name": "tauri-apps-api-${ pkgFile.version }.tgz"
        }
      ],
      "prepublish": [
        {
          "command": "yarn",
          "dryRunCommand": true
        },
        {
          "command": "echo '<details>\n<summary><em><h4>Yarn Audit</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "yarn audit",
          "dryRunCommand": true,
          "runFromRoot": true,
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "yarn npm-pack",
          "dryRunCommand": true
        }
      ],
      "publish": [
        {
          "command": "echo '<details>\n<summary><em><h4>Yarn Publish</h4></em></summary>\n\n```'",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "yarn npm-publish",
          "dryRunCommand": true,
          "pipe": true
        },
        {
          "command": "echo '```\n\n</details>\n'",
          "dryRunCommand": true,
          "pipe": true
        }
      ]
    },
    "tauri-utils": {
      "path": "./core/tauri-utils",
      "manager": "rust"
    },
    "tauri-bundler": {
      "path": "./tooling/bundler",
      "manager": "rust",
      "dependencies": ["tauri-utils"]
    },
    "tauri-runtime": {
      "path": "./core/tauri-runtime",
      "manager": "rust",
      "dependencies": ["tauri-utils"]
    },
    "tauri-runtime-wry": {
      "path": "./core/tauri-runtime-wry",
      "manager": "rust",
      "dependencies": ["tauri-utils", "tauri-runtime"]
    },
    "tauri-codegen": {
      "path": "./core/tauri-codegen",
      "manager": "rust",
      "dependencies": ["tauri-utils"]
    },
    "tauri-macros": {
      "path": "./core/tauri-macros",
      "manager": "rust",
      "dependencies": ["tauri-codegen", "tauri-utils"]
    },
    "tauri-plugin": {
      "path": "./core/tauri-plugin",
      "manager": "rust",
      "dependencies": ["tauri-utils"],
      "postversion": "node ../../.scripts/covector/sync-cli-metadata.js ${ pkg.pkg } ${ release.type }"
    },
    "tauri-build": {
      "path": "./core/tauri-build",
      "manager": "rust",
      "dependencies": ["tauri-codegen", "tauri-utils"],
      "postversion": [
        "node ../../.scripts/covector/sync-cli-metadata.js ${ pkg.pkg } ${ release.type }",
        "cargo build --manifest-path ../tauri-config-schema/Cargo.toml"
      ],
      "assets": [
        {
          "path": "./tooling/cli/schema.json",
          "name": "schema.json"
        }
      ]
    },
    "tauri": {
      "path": "./core/tauri",
      "manager": "rust",
      "dependencies": [
        "tauri-macros",
        "tauri-utils",
        "tauri-runtime",
        "tauri-runtime-wry",
        "tauri-build"
      ],
      "postversion": "node ../../.scripts/covector/sync-cli-metadata.js ${ pkg.pkg } ${ release.type }"
    },
    "@tauri-apps/cli": {
      "path": "./tooling/cli/node",
      "manager": "javascript",
      "getPublishedVersion": "node ../../../.scripts/covector/package-latest-version.js npm ${ pkgFile.pkg.name } ${ pkgFile.pkg.version }",
      "dependencies": ["tauri-cli"],
      "postversion": [
        "node ../../../.scripts/covector/sync-cli-metadata.js ${ pkg.pkg } ${ release.type }",
        "cargo build --manifest-path ../../../core/tauri-config-schema/Cargo.toml"
      ],
      "prepublish": [],
      "publish": [],
      "postpublish": []
    },
    "tauri-cli": {
      "path": "./tooling/cli",
      "manager": "rust",
      "dependencies": ["tauri-bundler", "tauri-utils"],
      "postversion": [
        "cargo check",
        "cargo build --manifest-path ../../core/tauri-config-schema/Cargo.toml"
      ],
      "assets": [
        {
          "path": "${ pkg.path }/target/package/tauri-cli-${ pkgFile.version }.crate",
          "name": "${ pkg.pkg }-${ pkgFile.version }.crate"
        }
      ]
    },
    "tauri-driver": {
      "path": "./tooling/webdriver",
      "manager": "rust",
      "postversion": "cargo check"
    }
  }
}
{
  "tag": "beta",
  "changes": [
    ".changes/UriSchemeResponder-export.md",
    ".changes/acl-default-permission-verification.md",
    ".changes/acl-platform-refactor.md",
    ".changes/acl-scope-refactor.md",
    ".changes/acl-urlpattern.md",
    ".changes/allow-recursive-asset-scope-on-file-drop-directory.md",
    ".changes/api-isTauri-type.md",
    ".changes/api-isTauri.md",
    ".changes/api-position-size-args.md",
    ".changes/api-readd-window-created-event.md",
    ".changes/api-simplify-unc-paths.md",
    ".changes/api-tauri-event-file-drop-rename.md",
    ".changes/api-tray-by-id.md",
    ".changes/api-type-definitions.md",
    ".changes/api-webview-window-new-methods.md",
    ".changes/api-webview-window.md",
    ".changes/api-window-on-filedrop.md",
    ".changes/app-handle-set-activation-policy.md",
    ".changes/app-manifest.md",
    ".changes/app-region-drag.md",
    ".changes/assets-setup.md",
    ".changes/beta.md",
    ".changes/better-error-for-invalid-plugin-config.md",
    ".changes/build-android-version-check.md",
    ".changes/build-resource-target-same-src.md",
    ".changes/build-schema-generation.md",
    ".changes/bunderl-installer-hooks.md",
    ".changes/bundler-deep-link-reg-path.md",
    ".changes/bundler-license.md",
    ".changes/bundler-long_description.md",
    ".changes/bundler-nsis-deep-links.md",
    ".changes/bundler-nsis-tauri-utils.md",
    ".changes/bundler-r-flag.md",
    ".changes/bundler-resources-unix.md",
    ".changes/bundler-rpm-license.md",
    ".changes/bundler-shortcuts-updating.md",
    ".changes/capabilities-multiwebview.md",
    ".changes/capabilities-tauri-conf.md",
    ".changes/capability-builder-platform.md",
    ".changes/capability-context-refactor.md",
    ".changes/cleanup-resource-table.md",
    ".changes/cli-acl-subcommands.md",
    ".changes/cli-add-@-spec.md",
    ".changes/cli-add-launchscreen-storyboard.md",
    ".changes/cli-allow-kotlin-keyword-as-ident.md",
    ".changes/cli-build-no-bundle.md",
    ".changes/cli-chinese-product-name.md",
    ".changes/cli-ds-store-dev-watch.md",
    ".changes/cli-empty-responses.md",
    ".changes/cli-frontend-dist-expected-path.md",
    ".changes/cli-icon-non-0-exit.md",
    ".changes/cli-include-dir-cargo-manifest-dir.md",
    ".changes/cli-migrate-non-utf8.md",
    ".changes/cli-migrate-unknown-plugins.md",
    ".changes/cli-mobile-init-partition.md",
    ".changes/cli-openssl-cargo-mobile2-removal.md",
    ".changes/cli-perserve-cargo-bin-name.md",
    ".changes/cli-plugin-android-init.md",
    ".changes/cli-plugins-migrate.md",
    ".changes/cli-update-deps-fix-log.md",
    ".changes/cli-updater-unkown-fields.md",
    ".changes/cli-windows-build-tools-detect-utf8.md",
    ".changes/cli-windows-sys.md",
    ".changes/closeable-maximizable.md",
    ".changes/codegen-capabilities-attribute.md",
    ".changes/codegen-set-assets.md",
    ".changes/color-context-generation.md",
    ".changes/context-assets-runtime-generic.md",
    ".changes/context-assets-unbox.md",
    ".changes/context-remove-assets-generics.md",
    ".changes/context-remove-assets-mut.md",
    ".changes/context-runtime-authority.md",
    ".changes/core-always-rebuilds-due-to-permissions-dir.md",
    ".changes/core-app-tray-remove-tray-apis-removed.md",
    ".changes/core-center-window.md",
    ".changes/core-emit-created-events.md",
    ".changes/core-emit-js-all-targets.md",
    ".changes/core-env-args.md",
    ".changes/core-isTauri.md",
    ".changes/core-js-event-anytarget.md",
    ".changes/core-jsimage-intoimg.md",
    ".changes/core-menu-resources-deadlock.md",
    ".changes/core-once-event-return-event-id.md",
    ".changes/core-path-basename-replace.md",
    ".changes/core-specta-integration.md",
    ".changes/core-start-resize-permission.md",
    ".changes/core-window-hasdisplayhandle.md",
    ".changes/core-windows-menubar-theme.md",
    ".changes/csp-header-linux.md",
    ".changes/cursor_position.md",
    ".changes/cursor_position_js.md",
    ".changes/custom-sign-command.md",
    ".changes/deb-rpm-post-pre-scripts-bundler.md",
    ".changes/deb-rpm-post-pre-scripts-config.md",
    ".changes/deb-rpm-provides-conflicts-replaces.md",
    ".changes/default-generic-for-menu.md",
    ".changes/default-generic-for-tray.md",
    ".changes/dev-fn.md",
    ".changes/downgrade-minisign.md",
    ".changes/drop-nsis-applicationid.md",
    ".changes/enhance-event-emit.md",
    ".changes/enhance-ipc-url-check.md",
    ".changes/enhance-resource-dir-resolution.md",
    ".changes/event-reopen.md",
    ".changes/expose-image-constructor.md",
    ".changes/expose-js-image.md",
    ".changes/fix-acl-webview-check.md",
    ".changes/fix-add-child-deadlock.md",
    ".changes/fix-capability-schema-definitions.md",
    ".changes/fix-capability-totokens.md",
    ".changes/fix-channel-buffer-processing.md",
    ".changes/fix-channel-ipc-response.md",
    ".changes/fix-clear-residual-listeners.md",
    ".changes/fix-cli-add-more-plugins.md",
    ".changes/fix-cli-migration-http-acl.md",
    ".changes/fix-codegen-rerun-if-changed.md",
    ".changes/fix-config-arg.md",
    ".changes/fix-draw-tracing.md",
    ".changes/fix-fs-scope-check-symlink.md",
    ".changes/fix-incompatible-ipc-field-postmessage.md",
    ".changes/fix-inner-size.md",
    ".changes/fix-invoke-devtools-by-hotkey.md",
    ".changes/fix-ios-dev-logs.md",
    ".changes/fix-ipc-error-json.md",
    ".changes/fix-macos-deep-link-cfbundleurlname.md",
    ".changes/fix-menu-remove-api.md",
    ".changes/fix-metadata-on-close.md",
    ".changes/fix-migrate-updater.md",
    ".changes/fix-mobile-cmd-case.md",
    ".changes/fix-mobile-process-spawn.md",
    ".changes/fix-pnpm-check.md",
    ".changes/fix-process-ipc-message-fn.md",
    ".changes/fix-proxy-url-totokens-impl.md",
    ".changes/fix-remote-domain-url.md",
    ".changes/fix-reparent.md",
    ".changes/fix-rewrite-schema.md",
    ".changes/fix-runtime-wry-32bit.md",
    ".changes/fix-schemars-compatibility.md",
    ".changes/fix-scope-resolution.md",
    ".changes/fix-tauri-build-license-field.md",
    ".changes/fix-tauri-build-unix.md",
    ".changes/fix-temp-permission-file-name.md",
    ".changes/fix-visibility-change.md",
    ".changes/fix-webview-close.md",
    ".changes/fix-window-center-monitor-scale.md",
    ".changes/fix-window-center-work-area.md",
    ".changes/fix-window-destroy-deadlock.md",
    ".changes/fix-window-inner-size-crash.md",
    ".changes/global-api-script-path-plugins.md",
    ".changes/handle-empty-permissions.md",
    ".changes/hide-windows-on-cleanup.md",
    ".changes/http-v1.md",
    ".changes/ico-featrue-flags.md",
    ".changes/image-crate.md",
    ".changes/image-rgba-uint8array.md",
    ".changes/image-size-refactor.md",
    ".changes/improve-errors-for-missing-links-property.md",
    ".changes/inline-plugins.md",
    ".changes/ios-signing-optional.md",
    ".changes/ipc-allow-headers.md",
    ".changes/ipc-only-main-frame.md",
    ".changes/ipc-post-message-fallback.md",
    ".changes/ipc-request-param-refactor.md",
    ".changes/isolation-pattern-key-extractable.md",
    ".changes/isolation-script-remove-itself.md",
    ".changes/mobile-use-identifier-as-id.md",
    ".changes/mobile-watcher.md",
    ".changes/monitor-from-point-js.md",
    ".changes/monitor-from-point.md",
    ".changes/multiwebview-bounds-fixes.md",
    ".changes/nsis-append-product-name.md",
    ".changes/nsis-dpi-aware.md",
    ".changes/nsis-shortcuts-regression.md",
    ".changes/path-result-error-rexport.md",
    ".changes/permission-platforms.md",
    ".changes/permission-table.md",
    ".changes/plugin-global-api-script.md",
    ".changes/plugin-init-script-context.md",
    ".changes/plugin-ios-xcode-project.md",
    ".changes/preserve-channel-order.md",
    ".changes/progress-bar-state-refactor.md",
    ".changes/re-export-progress-bar-status.md",
    ".changes/rect-strcut.md",
    ".changes/refactor-capabilities-schema.md",
    ".changes/refactor-capability-remote-option.md",
    ".changes/refactor-scope-ret-value.md",
    ".changes/remove-app-custom-protocol-feature.md",
    ".changes/remove-from-format-image.md",
    ".changes/remove-unit-uri.md",
    ".changes/rename-file-drop.md",
    ".changes/reparent.md",
    ".changes/rerun-if-permission-created.md",
    ".changes/resources_table_access.md",
    ".changes/revert-app-region-drag.md",
    ".changes/revert-fix-visibility-change.md",
    ".changes/rpm-compression-level.md",
    ".changes/runner-config.md",
    ".changes/runtime-add-capability.md",
    ".changes/runtime-capability-dynamic.md",
    ".changes/runtime-dpi-mod-moved.md",
    ".changes/runtime-icon-lifetime.md",
    ".changes/runtime-window-builder-get-theme.md",
    ".changes/rustc-check-cfg.md",
    ".changes/rwh-06.md",
    ".changes/schema_str.md",
    ".changes/script-older-os.md",
    ".changes/set-auto-resize.md",
    ".changes/set-zoom.md",
    ".changes/skip-webview-install-mod.md",
    ".changes/strict-csp-isolation-frame.md",
    ".changes/tauri-build-codegen-capabilities.md",
    ".changes/tauri-build-dev-changes.md",
    ".changes/tauri-build-dev-fn.md",
    ".changes/tauri-bundle-command.md",
    ".changes/tauri-cli-add-default-perm.md",
    ".changes/tauri-close-requested-target-specific.md",
    ".changes/tauri-codegen-use-correct-env.md",
    ".changes/tauri-context-icon-methods.md",
    ".changes/tauri-correct-platform-file.md",
    ".changes/tauri-dev-fn-const.md",
    ".changes/tauri-error-sync.md",
    ".changes/tauri-icon-removed.md",
    ".changes/tauri-image-codegen.md",
    ".changes/tauri-image.md",
    ".changes/tauri-info-no-node.md",
    ".changes/tauri-plugin-identifier-alphanumeric.md",
    ".changes/tauri-runtime-webview-events.md",
    ".changes/tauri-scope-object-error-sync.md",
    ".changes/tauri-utils-capability-refactor.md",
    ".changes/tauri-utils-package-name-removed.md",
    ".changes/tauri-utils-plugin-module.md",
    ".changes/tauri-webview-events.md",
    ".changes/tauri-window-origin-default-to-null.md",
    ".changes/tray-icon-event.md",
    ".changes/tray-icon-rect.md",
    ".changes/tray-rect.md",
    ".changes/truncate-before-write-buildtask.md",
    ".changes/unstable-child-webview.md",
    ".changes/update-acl-paths-cli.md",
    ".changes/update-app-template-capabilities-conf.md",
    ".changes/update-gradle.md",
    ".changes/update-plugin-template.md",
    ".changes/update-target-sdk.md",
    ".changes/url-result-runtime.md",
    ".changes/url-result.md",
    ".changes/utils-bundle-target-all.md",
    ".changes/utils-bundle-type-all.md",
    ".changes/utils-debug-eprintln.md",
    ".changes/utils-installer-hooks.md",
    ".changes/utils-named-capability-file.md",
    ".changes/utils-remove-asset-trait.md",
    ".changes/utils-sign-command.md",
    ".changes/webview-bounds.md",
    ".changes/wry-0.36.md",
    ".changes/wry-0.37.md",
    ".changes/wry-0.38.md",
    ".changes/zoom-hotkeys-enabled.md",
    ".changes/zoom-polyfill.md"
  ]
}
    branches: ["main"]
  pull_request: # See here for image contents: https://github.com/microsoft/vscode-dev-containers/tree/master/containers/ubuntu/.devcontainer/base.Dockerfile
# [Choice] Ubuntu version (use jammy or bionic on local arm64/Apple Silicon): jammy, focal, bionic
ARG VARIANT="jammy"
FROM mcr.microsoft.com/vscode/devcontainers/base:0-${VARIANT}

# Derived from Tauri contribution and setup guides:
# See: https://github.com/tauri-apps/tauri/blob/dev/.github/CONTRIBUTING.md#development-guide
# See: https://tauri.app/v1/guides/getting-started/prerequisites/#setting-up-linux
ARG TAURI_BUILD_DEPS="build-essential curl libappindicator3-dev libgtk-3-dev librsvg2-dev libssl-dev libwebkit2gtk-4.1-dev wget"

RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
    && apt-get install -y --no-install-recommends $TAURI_BUILD_DEPS
    branches: ["main"]

permissions: // For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.234.0/containers/ubuntu
{
  "name": "Ubuntu",
  "build": {
    "dockerfile": "Dockerfile",
    // Update 'VARIANT' to pick an Ubuntu version: jammy / ubuntu-22.04, focal / ubuntu-20.04, bionic /ubuntu-18.04
    // Use ubuntu-22.04 or ubuntu-18.04 on local arm64/Apple Silicon.
    "args": { "VARIANT": "ubuntu-22.04" }
  },

  // Set *default* container specific settings.json values on container create.
  "settings": {},

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  // "postCreateCommand": "uname -a",

  // Comment out to connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode",
  "features": {
    "node": "lts",
    "rust": "latest"
  }
}
  contents: read

jobs: [target.x86_64-pc-windows-msvc]
rustflags = ["-C", "target-feature=+crt-static"]

[target.'cfg(all(windows, debug_assertions))']
rustflags = [
  "-C",
  "target-feature=+crt-static",
  "-C",
  # increase the stack size to prevent overflowing the
  # stack in debug when launching sub commands
  "link-arg=/STACK:4194304",
]

[target.x86_64-apple-darwin]
rustflags = [
  "-C",
  "link-args=-weak_framework Metal -weak_framework MetalPerformanceShaders -weak_framework QuartzCore -weak_framework CoreGraphics",
]

[target.aarch64-apple-darwin]
rustflags = [
  "-C",
  "link-args=-fuse-ld=lld -weak_framework Metal -weak_framework MetalPerformanceShaders -weak_framework QuartzCore -weak_framework CoreGraphics",
]

[target.'cfg(all())']
rustflags = [
  "-D",
  "clippy::all",
  "-D",
  "clippy::await_holding_refcell_ref",
  "-D",
  "clippy::missing_safety_doc",
  "-D",
  "clippy::undocumented_unsafe_blocks",
  "--cfg",
  "tokio_unstable",
]
  test: # To run a build using a local tree:
#
# 0. Check out these repositories as siblings:
#
#     - https://github.com/denoland/deno
#     - https://github.com/denoland/deno_core
#     - https://github.com/denoland/rusty_v8
#
# 1. From `deno`, run: cargo --config .cargo/local-build.toml build

[patch.crates-io]
deno_core = { path = "../deno_core/core" }
deno_ops = { path = "../deno_core/ops" }
serde_v8 = { path = "../deno_core/serde_v8" }
v8 = { path = "../rusty_v8" }
    runs-on: FROM mcr.microsoft.com/vscode/devcontainers/rust:1-bullseye

# Install cmake and protobuf-compiler
RUN apt-get update \
  && apt-get install -y cmake \
  && apt-get install -y protobuf-compiler \
  && rm -rf /var/lib/apt/lists/*

# Install Deno
ENV DENO_INSTALL=/usr/local
RUN curl -fsSL https://deno.land/x/install/install.sh | sh


    steps: {
  "name": "Rust",
  "build": {
    "dockerfile": "Dockerfile"
  },
  "runArgs": ["--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined"],
  "customizations": {
    "vscode": {
      "settings": {
        "lldb.executable": "/usr/bin/lldb",
        // VS Code don't watch files under ./target
        "files.watcherExclude": {
          "**/target/**": true
        },
        "extensions": [
          "rust-lang.rust-analyzer",
          "tamasfe.even-better-toml",
          "vadimcn.vscode-lldb",
          "mutantdino.resourcemonitor"
        ]
      }
    }
  },
  "postCreateCommand": "git submodule update --init",
  "remoteUser": "vscode"
}
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@61fe2df320078202e33d7d5ad347e7dcfa0e8f31  # v1.1.2
        with:
          deno-version: v1.x

      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check

      - name: Run linter
        run: deno lint

      - name: Run tests
        run: deno test -A
