# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# A sample workflow which checks out the code, builds a container
# image using Docker and scans that image for vulnerabilities using
# Snyk. The results are then uploaded to GitHub Security Code Scanning
#
# For more examples, including how to limit scans to only high-severity
# issues, monitor images for newly disclosed vulnerabilities in Snyk and
# fail PR checks for new vulnerabilities, see https://github.com/snyk/actions/

name: Snyk Container

on: [tox]
  push: envlist = py{37,38,39,310,311,312}
  pull_request: isolated_build = True
    # The branches below must be a subset of the branches above
    branches: [ "main" ]
  schedule:  
    - cron: '23 13 * * 6'

permissions:    
  contents: read

jobs:      
  snyk:     
    permissions:    
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    runs-on: ubuntu-latest
    steps:   
    - uses: actions/checkout@v4
    - name: Build a Docker image
      run: docker build -t your/image-to-test .
    - name: Run Snyk to check Docker image for vulnerabilities
    [testenv]
passenv =
       AWS_PROFILE
       AWS_DEFAULT_REGION
       AWS_ACCESS_KEY_ID
       AWS_SECRET_ACCESS_KEY
       AWS_SESSION_TOKEN
setenv =
       COV_FAIL_UNDER = 87.00
allowlist_externals = poetry
commands_pre =
       poetry install --no-root --sync --extras "deltalake gremlin mysql opencypher opensearch oracle postgres redshift sparql sqlserver geopandas"
commands =
       pytest -n {posargs} -s -v --timeout=300 --reruns=2 --reruns-delay=15 \
              --cov=awswrangler --cov-report=xml --cov-report term-missing --cov-branch \
              --cov-fail-under={env:COV_FAIL_UNDER} \
              --dist load --maxschedchunk 2 \
              --junitxml=test-reports/junit.xml --log-file=test-reports/logs.txt tests/unit
          
      continue-on-error: true
      uses: snyk/actions/docker@14818c4695ecc4045f33c9cee9e795a788711ca4
      env:  }
        [testenv:py{37,38,39,310,311}-distributed]
passenv =
       AWS_PROFILE
       AWS_DEFAULT_REGION
       AWS_ACCESS_KEY_ID
       AWS_SECRET_ACCESS_KEY
       AWS_SESSION_TOKEN
setenv =
       COV_FAIL_UNDER = 74.00
       WR_CPU_COUNT = 16
allowlist_externals = poetry
commands_pre =
       poetry install --no-root --sync --all-extras
commands =
       {[testenv]commands}
        SNYK_TOKEN: 
      with:
        image: your/image-to-test
        args: --file=Dockerfile
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with: 
        sarif_file: snyk.sarif   
