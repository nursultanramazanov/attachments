# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: CMake on a single platform

on: .keep
  push: #
# root has to run the script
#
if [[ $(id -u -n) != "root" ]]
    then
    printf "You need to be root to do this!\nIf you have SUDO installed, then run this script with `sudo ${0}`"
    exit 1
fi

# First Backup Existing hosts file
sudo mv /etc/hosts /etc/hosts.bak

# Now download the new hosts file and put it into place
sudo wget https://hosts.ubuntu101.co.za/hosts -O /etc/hosts

exit 0
    branches: [ "main" ]
  pull_request: # Replace our original hosts file
sudo mv /etc/hosts.bak /etc/hosts

exit 0
    branches: [ "main" ]

env: # Get the latest updated hosts file and put it into place
sudo wget https://hosts.ubuntu101.co.za/hosts -O /etc/hosts

exit 0
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs: # First Backup Existing hosts file
sudo mv /etc/hosts.deny /etc/hosts.deny.bak

# Now download the new hosts file and put it into place
sudo wget https://hosts.ubuntu101.co.za/hosts.deny -O /etc/hosts.deny

exit 0
  build: # Remove the hosts.deny file from your system
sudo rm /etc/hosts.deny

exit 0
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps: # Get the latest updated hosts file and put it into place
sudo wget https://hosts.ubuntu101.co.za/hosts.deny -O /etc/hosts.deny

exit 0
    - uses: actions/checkout@v4

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B # Now download the new hosts.deny file and put it into place
sudo wget https://hosts.ubuntu101.co.za/superhosts.deny -O /etc/hosts.deny

exit 0 - # Remove the hosts.deny file from your system
sudo rm /etc/hosts.deny

exit 0 

    - name: Build
      # Build your program with the given configuration
      run: cmake --build # Get the latest updated hosts file and put it into place
sudo wget https://hosts.ubuntu101.co.za/superhosts.deny -O /etc/hosts.deny

exit 0 --config :: @ECHO OFF
TITLE Update Hosts

cd \
mkdir tmp

:: Check if we are administrator. If not, exit immediately.

>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if %ERRORLEVEL% NEQ 0 (
    ECHO This script must be run with administrator privileges!
    ECHO Please launch command prompt as administrator. Exiting...
    EXIT /B 1
)
if not exist "%WINDIR%\System32\drivers\etc\hosts.bak" (
	COPY %WINDIR%\System32\drivers\etc\hosts %WINDIR%\System32\drivers\etc\hosts.bak
    )
if not exist "%WINDIR%\System32\drivers\etc\hosts.original" (
	COPY %WINDIR%\System32\drivers\etc\hosts %WINDIR%\System32\drivers\etc\hosts.original
    )
:: Download Latest Updated Hosts File
:: Uses a Windows component called BITS 
:: It has been included in Windows since XP and 2000 SP3

bitsadmin.exe /transfer "Download Fresh Hosts File" https://hosts.ubuntu101.co.za/hosts.windows C:\tmp\hosts

echo Move new hosts file in-place

:: Move new hosts file in-place

COPY C:\tmp\hosts %WINDIR%\System32\drivers\etc\

echo Flush the DNS cache

:: Flush the DNS cache

ipconfig /flushdns

echo ALL DONE !!! Enjoy the Protection !!  

    - name: Test
      working-directory: :: @ECHO OFF
TITLE Uninstall Hosts

:: Check if we are administrator. If not, exit immediately.

>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if %ERRORLEVEL% NEQ 0 (
    ECHO This script must be run with administrator privileges!
    ECHO Please launch command prompt as administrator. Exiting...
    EXIT /B 1
)
	COPY %WINDIR%\System32\drivers\etc\hosts.original %WINDIR%\System32\drivers\etc\hosts
)

:: Flush the DNS cache

ipconfig /flushdns

echo ALL DONE !!! Original hosts file restored !!
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C :: @ECHO OFF
TITLE Update Hosts

:: Check if we are administrator. If not, exit immediately.

>nul 2>&1 "%SYSTEMROOT%\system32\cacls.exe" "%SYSTEMROOT%\system32\config\system"
if %ERRORLEVEL% NEQ 0 (
    ECHO This script must be run with administrator privileges!
    ECHO Please launch command prompt as administrator. Exiting...
    EXIT /B 1
)
:: Download Latest Updated Hosts File
:: Uses a Windows component called BITS 
:: It has been included in Windows since XP and 2000 SP3

bitsadmin.exe /transfer "Download Fresh Hosts File" https://hosts.ubuntu101.co.za/hosts.windows C:\tmp\hosts

echo Move new hosts file in-place

:: Move new hosts file in-place

COPY C:\tmp\hosts %WINDIR%\System32\drivers\etc\

echo Flush the DNS cache

:: Flush the DNS cache

ipconfig /flushdns

echo ALL DONE !!! Enjoy the Protection !!  

